import subprocess
import os
import logging

script_path = os.path.dirname(os.path.abspath(__file__))
log_file = os.path.join(script_path, 'app.log')
logging.basicConfig(
    level=logging.DEBUG,
    format='%(asctime)s - %(levelname)s - %(message)s',
    handlers=[
        logging.FileHandler(log_file, mode='w')  # –õ–æ–≥–∏ –∑–∞–ø–∏—Å—ã–≤–∞—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –≤ —Ñ–∞–π–ª
    ]
)


def run_command(cmd):
    logging.debug(f"–ó–∞–ø—É—Å–∫ –∫–æ–º–∞–Ω–¥—ã: {cmd}")
    result = subprocess.run(cmd, shell=True, stdout=subprocess.PIPE, stderr=subprocess.PIPE, text=True)
    output = result.stdout.strip() + ("\n" + result.stderr.strip() if result.stderr else "")
    logging.debug(f"–†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–∞–Ω–¥—ã: {output}")
    return output.strip(), result.returncode


def check_module_item(num, description, module=None, prefix=None, should_be_enabled=True, enable_func=None, disable_func=None, force_disable=False):
    print(f"[{num}] {description}")
    logging.info(f"[{num}] {description}")
    loaded_modules = run_command("apachectl -M")[0].splitlines()

    if module:
        enabled = any(module in line for line in loaded_modules)
        if should_be_enabled and not enabled:
            print(f"‚ùå –ú–æ–¥—É–ª—å {module} –≤—ã–∫–ª—é—á–µ–Ω, –≤–∫–ª—é—á–∞–µ–º...")
            logging.warning(f"–ú–æ–¥—É–ª—å {module} –≤—ã–∫–ª—é—á–µ–Ω, –≤–∫–ª—é—á–∞–µ–º...")
            if enable_func:
                enable_func()
                logging.info(f"–ú–æ–¥—É–ª—å {module} –≤–∫–ª—é—á—ë–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ enable_func.")
            else:
                run_command(f"sudo a2enmod {module.replace('_module','')}")
                print(f"[{num}] ‚úÖ –ú–æ–¥—É–ª—å {module} –≤–∫–ª—é—á—ë–Ω.")
                logging.info(f"–ú–æ–¥—É–ª—å {module} –≤–∫–ª—é—á—ë–Ω —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã a2enmod.")
        elif not should_be_enabled and enabled:
            print(f"‚ùå –ú–æ–¥—É–ª—å {module} –≤–∫–ª—é—á—ë–Ω, –æ—Ç–∫–ª—é—á–∞–µ–º...")
            logging.warning(f"–ú–æ–¥—É–ª—å {module} –≤–∫–ª—é—á—ë–Ω, –æ—Ç–∫–ª—é—á–∞–µ–º...")
            if disable_func:
                disable_func()
                logging.info(f"–ú–æ–¥—É–ª—å {module} –æ—Ç–∫–ª—é—á—ë–Ω —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Ñ—É–Ω–∫—Ü–∏–∏ disable_func.")
            else:
                force_flag = " -f" if force_disable else ""
                run_command(f"sudo a2dismod {force_flag} {module.replace('_module','')}")
                print(f"‚úÖ –ú–æ–¥—É–ª—å {module} –æ—Ç–∫–ª—é—á—ë–Ω.")
                logging.info(f"–ú–æ–¥—É–ª—å {module} –æ—Ç–∫–ª—é—á—ë–Ω —Å –ø–æ–º–æ—â—å—é –∫–æ–º–∞–Ω–¥—ã a2dismod.")
        else:
            status = "–≤–∫–ª—é—á—ë–Ω" if enabled else "–æ—Ç–∫–ª—é—á—ë–Ω"
            print(f"‚úÖ –ú–æ–¥—É–ª—å {module} {status} (–∫–∞–∫ –∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å).")
            logging.info(f"–ú–æ–¥—É–ª—å {module} {status} (–∫–∞–∫ –∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å).")

    elif prefix:
        found = any(prefix in line for line in loaded_modules)
        if should_be_enabled and not found:
            print(f"‚ùå –ú–æ–¥—É–ª–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '{prefix}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–¥–æ –≤–∫–ª—é—á–∏—Ç—å.")
            logging.warning(f"–ú–æ–¥—É–ª–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '{prefix}' –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–º–æ–∂–Ω–æ –Ω–∞–¥–æ –≤–∫–ª—é—á–∏—Ç—å.") 
        elif not should_be_enabled and found:
            print(f"‚ùå –ú–æ–¥—É–ª–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '{prefix}' –≤–∫–ª—é—á–µ–Ω—ã, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ a2dismod")
            logging.warning(f"–ú–æ–¥—É–ª–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '{prefix}' –≤–∫–ª—é—á–µ–Ω—ã, —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –æ—Ç–∫–ª—é—á–∏—Ç—å —á–µ—Ä–µ–∑ a2dismod")
        else:
            print(f"‚úÖ –ú–æ–¥—É–ª–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '{prefix}' {'–≤–∫–ª—é—á–µ–Ω—ã' if found else '–æ—Ç–∫–ª—é—á–µ–Ω—ã'} (–∫–∞–∫ –∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å).")
            logging.info(f"–ú–æ–¥—É–ª–∏ —Å –ø—Ä–µ—Ñ–∏–∫—Å–æ–º '{prefix}' {'–≤–∫–ª—é—á–µ–Ω—ã' if found else '–æ—Ç–∫–ª—é—á–µ–Ω—ã'} (–∫–∞–∫ –∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å).")
    print()
    logging.info("")

def check_permissions():
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ Apache ===")
    logging.info("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ Apache ===")

    # 2.1 –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    print("[2.1] Apache –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–π —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –±–µ–∑ –ø—Ä–∞–≤ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    logging.info("[2.1] Apache –∑–∞–ø—É—â–µ–Ω –æ—Ç –∏–º–µ–Ω–∏ —Å–µ—Ä–≤–∏—Å–Ω–æ–π —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏ –±–µ–∑ –ø—Ä–∞–≤ —Å—É–ø–µ—Ä–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
    ps_output, _ = run_command("ps aux")
    lines = [line.strip() for line in ps_output.splitlines() if "apache2" in line or "httpd" in line]

    root_count = sum(1 for line in lines if line.startswith("root"))
    non_root_users = [line.split()[0] for line in lines if not line.startswith("root")]

    if root_count == 1:
        print("‚úÖ –ü–µ—Ä–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å apache2 –æ—Ç root ‚Äî –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (master)")
        logging.info("‚úÖ –ü–µ—Ä–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å apache2 –æ—Ç root ‚Äî –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (master)")
    else:
        print("‚ùå –ü–µ—Ä–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç root!")
        logging.error("‚ùå –ü–µ—Ä–≤—ã–π –ø—Ä–æ—Ü–µ—Å—Å –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ—Ç root!")

    if all(user == "www-data" for user in non_root_users):
        print("‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã (–∫—Ä–æ–º–µ master) –æ—Ç www-data")
        logging.info("‚úÖ –í—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã (–∫—Ä–æ–º–µ master) –æ—Ç www-data")
    else:
        print(f"‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –æ—Ç www-data: {', '.join(non_root_users)}")
        logging.warning(f"‚ùå –ù–∞–π–¥–µ–Ω—ã –ø—Ä–æ—Ü–µ—Å—Å—ã –Ω–µ –æ—Ç www-data: {', '.join(non_root_users)}")
    print()
    logging.info("")

    # 2.2 –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–æ–ª–æ—á–∫–∏
    print("[2.2] –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —É www-data –æ–±–æ–ª–æ—á–∫–∞ /sbin/nologin")
    logging.info("[2.2] –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —É www-data –æ–±–æ–ª–æ—á–∫–∞ /sbin/nologin")
    shell_line, _ = run_command("getent passwd www-data")
    shell = shell_line.strip().split(":")[-1] if shell_line else ""
    if shell == "/sbin/nologin" or shell == "/usr/sbin/nologin":
        print(f"‚úÖ –û–±–æ–ª–æ—á–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞–∫ {shell}")
        logging.info(f"‚úÖ –û–±–æ–ª–æ—á–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–∞–∫ {shell}")
    else:
        print(f"‚ùå –û–±–æ–ª–æ—á–∫–∞ –Ω–µ /sbin/nologin: {shell}")
        logging.error(f"‚ùå –û–±–æ–ª–æ—á–∫–∞ –Ω–µ /sbin/nologin: {shell}")
    print()
    logging.info("")

    # 2.3 –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å–∏
    print("[2.3] –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —É—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å www-data –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –≤—Ö–æ–¥–∞")
    logging.info("[2.3] –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ —É—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å www-data –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –≤—Ö–æ–¥–∞")
    status_line, _ = run_command("passwd -S www-data")
    if "L" in status_line.split():
        print(f"‚úÖ –£—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞: {status_line}")
        logging.info(f"‚úÖ –£—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞: {status_line}")
    else:
        logging.error(f"‚ùå –£—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–Ω–∞: {status_line}")
        logging.info("üîß –ë–ª–æ–∫–∏—Ä—É–µ–º —É—á—ë—Ç–Ω—É—é –∑–∞–ø–∏—Å—å www-data...")
        print(f"‚ùå –£—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å –∞–∫—Ç–∏–≤–Ω–∞: {status_line}")
        print("üîß –ë–ª–æ–∫–∏—Ä—É–µ–º —É—á—ë—Ç–Ω—É—é –∑–∞–ø–∏—Å—å www-data...")
        _, code = run_command("sudo usermod -L www-data")
        if code == 0:
            print("‚úÖ –£—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
            logging.info("‚úÖ –£—á—ë—Ç–Ω–∞—è –∑–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É—á—ë—Ç–Ω—É—é –∑–∞–ø–∏—Å—å!")
            logging.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É—á—ë—Ç–Ω—É—é –∑–∞–ø–∏—Å—å!")
    print()
    logging.info("")

    # 2.4 –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π
    print("[2.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π Apache")
    logging.info("[2.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π Apache")
    # –°–ø–∏—Å–æ–∫ –ø—É—Ç–µ–π –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
    directories_to_check = [
        "/etc/apache2",          # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã Apache
        "/usr/share/apache2",    # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ –ø–∞–ø–∫–∏ Apache
        "/var/www",              # –í–µ–±-–∫–æ–Ω—Ç–µ–Ω—Ç
        "/etc/ssl/private",      # –ü—Ä–∏–≤–∞—Ç–Ω—ã–µ –∫–ª—é—á–∏ SSL
        "/var/log/apache2",      # –õ–æ–≥-—Ñ–∞–π–ª—ã Apache
        "/run/apache2"           # –í—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã –∏ PID
    ]

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ –ø—É—Ç–∏
    for path in directories_to_check:
        print(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è {path}...")
        logging.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è {path}...")
        output, _ = run_command(f"find {path} \\! -user root")
        
        if not output.strip():
            print(f"‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –≤ {path} –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç root")
            logging.info(f"‚úÖ –í—Å–µ —Ñ–∞–π–ª—ã –≤ {path} –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∞—Ç root")
        else:
            print(f"‚ùå –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –Ω–µ –æ—Ç root –≤ {path}")
            logging.warning(f"‚ùå –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã –Ω–µ –æ—Ç root –≤ {path}")
            # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ, —á—Ç–æ–±—ã —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–ª–∞–¥–µ–ª—å—Ü–∞ root
            run_command(f"sudo chown root:root {path} -R")
            print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü—ã root:root –¥–ª—è –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –≤ {path}")
    print()
    logging.info("")

    # 2.5 –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ other
    print("[2.5] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ /etc/apache2")
    logging.info("[2.5] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ /etc/apache2")
    files_with_other_write, _ = run_command("find /etc/apache2 -perm /o=w -type f")
    if files_with_other_write.strip():
        print("‚ùå –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–≤–∞–º–∏ –∑–∞–ø–∏—Å–∏ –¥–ª—è other:")
        print(files_with_other_write.strip())
        logging.warning("‚ùå –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–≤–∞–º–∏ –∑–∞–ø–∏—Å–∏ –¥–ª—è other:")
        logging.warning(files_with_other_write.strip())
    else:
        print("‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è other –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        logging.info("‚úÖ –ü—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è other –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    print()
    logging.info("")
    # 2.6 –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–≥–æ–≤
    print("[2.6] –ü—Ä–æ–≤–µ—Ä–∫–∞ /var/log/apache2 –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç root:www-data –∏ chmod 660")
    logging.info("[2.6] –ü—Ä–æ–≤–µ—Ä–∫–∞ /var/log/apache2 –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç root:www-data –∏ chmod 660")
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞, –≥—Ä—É–ø–ø—É –∏ –ø—Ä–∞–≤–∞
    owner, _ = run_command("stat -c %U /var/log/apache2")
    group, _ = run_command("stat -c %G /var/log/apache2")
    perms, _ = run_command("stat -c %a /var/log/apache2")
    
    # –ï—Å–ª–∏ –≤—Å–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–≤–æ–¥–∏–º —É—Å–ø–µ—Ö
    if owner == "root" and group == "www-data" and perms == "660":
        print("‚úÖ /var/log/apache2 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
        logging.info("‚úÖ /var/log/apache2 —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
    else:
        print("‚ùå /var/log/apache2 –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏–ª–∏ –ø—Ä–∞–≤–∞")
        logging.error("‚ùå /var/log/apache2 –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏–ª–∏ –ø—Ä–∞–≤–∞")
        # –ï—Å–ª–∏ –≤–ª–∞–¥–µ–ª—å—Ü—ã –∏–ª–∏ –ø—Ä–∞–≤–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
        if owner != "root" or group != "www-data":
            print("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –≥—Ä—É–ø–ø—ã –Ω–∞ root:www-data")
            logging.info("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –≥—Ä—É–ø–ø—ã –Ω–∞ root:www-data")
            run_command("sudo chown root:www-data /var/log/apache2 -R")
        
        if perms != "660":
            print("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ 660")
            logging.info("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ 660")
            run_command("sudo chmod 660 /var/log/apache2 -R")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å–Ω–æ–≤–∞
        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
        logging.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
        owner, _ = run_command("stat -c %U /var/log/apache2")
        group, _ = run_command("stat -c %G /var/log/apache2")
        perms, _ = run_command("stat -c %a /var/log/apache2")
        
        if owner == "root" and group == "www-data" and perms == "660":
            print("‚úÖ /var/log/apache2 —Ç–µ–ø–µ—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
            logging.info("‚úÖ /var/log/apache2 —Ç–µ–ø–µ—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–∞–≤ –∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤.")
            logging.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–∞–≤ –∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤.")
    logging.info("")
    # 2.8 –ü—Ä–æ–≤–µ—Ä–∫–∞ PID —Ñ–∞–π–ª–∞
    print("[2.8] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ /run/apache2/apache2.pid")
    logging.info("[2.8] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ /run/apache2/apache2.pid")
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞, –≥—Ä—É–ø–ø—É –∏ –ø—Ä–∞–≤–∞
    pid_user, _ = run_command("stat -c %U /run/apache2/apache2.pid")
    pid_group, _ = run_command("stat -c %G /run/apache2/apache2.pid")
    pid_perm, _ = run_command("stat -c %a /run/apache2/apache2.pid")
    
    # –ï—Å–ª–∏ –≤—Å–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç, –≤—ã–≤–æ–¥–∏–º —É—Å–ø–µ—Ö
    if pid_user == "root" and pid_group == "root" and pid_perm == "644":
        print("‚úÖ /run/apache2/apache2.pid —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
        logging.info("‚úÖ /run/apache2/apache2.pid —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
    else:
        print("‚ùå /run/apache2/apache2.pid –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏–ª–∏ –ø—Ä–∞–≤–∞")
        logging.error("‚ùå /run/apache2/apache2.pid –∏–º–µ–µ—Ç –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏–ª–∏ –ø—Ä–∞–≤–∞")
        # –ï—Å–ª–∏ –≤–ª–∞–¥–µ–ª—å—Ü—ã –∏–ª–∏ –ø—Ä–∞–≤–∞ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç, –∏—Å–ø—Ä–∞–≤–ª—è–µ–º
        if pid_user != "root" or pid_group != "root":
            print("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –≥—Ä—É–ø–ø—ã –Ω–∞ root:root")
            logging.info("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –≥—Ä—É–ø–ø—ã –Ω–∞ root:root")
            run_command("sudo chown root:root /run/apache2/apache2.pid")
        
        if pid_perm != "644":
            print("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ 644")
            logging.info("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∞–≤ –Ω–∞ 644")
            run_command("sudo chmod 644 /run/apache2/apache2.pid")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Å–Ω–æ–≤–∞
        print("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
        logging.info("–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π...")
        pid_user, _ = run_command("stat -c %U /run/apache2/apache2.pid")
        pid_group, _ = run_command("stat -c %G /run/apache2/apache2.pid")
        pid_perm, _ = run_command("stat -c %a /run/apache2/apache2.pid")
        
        if pid_user == "root" and pid_group == "root" and pid_perm == "644":
            print("‚úÖ /run/apache2/apache2.pid —Ç–µ–ø–µ—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
            logging.info("‚úÖ /run/apache2/apache2.pid —Ç–µ–ø–µ—Ä—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º")
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–∞–≤ –∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤.")
            logging.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–∏ –ø—Ä–∞–≤ –∏ –≤–ª–∞–¥–µ–ª—å—Ü–µ–≤.")
    logging.info("")
    # 2.9 –ü—Ä–æ–≤–µ—Ä–∫–∞ ScoreBoardFile
    print("[2.9] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ ScoreBoardFile")
    logging.info("[2.9] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–∞–π–ª–∞ ScoreBoardFile")
    # –ò—â–µ–º –ø—É—Ç—å –∫ ScoreBoardFile –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    grep_output, _ = run_command('grep -r "ScoreBoardFile" /etc/apache2/*.conf')

    if grep_output.strip():
        # –ü—ã—Ç–∞–µ–º—Å—è –∏–∑–≤–ª–µ—á—å –ø—É—Ç—å –∫ ScoreBoardFile
        import re
        match = re.search(r'ScoreBoardFile\s+(\S+)', grep_output)
        if match:
            scoreboard_path = match.group(1)

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
            if os.path.exists(scoreboard_path):
                owner, _ = run_command(f"stat -c %U {scoreboard_path}")
                group, _ = run_command(f"stat -c %G {scoreboard_path}")
                perms, _ = run_command(f"stat -c %A {scoreboard_path}")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –≥—Ä—É–ø–ø—É
                if owner == "root" and group == "root":
                    print("‚úÖ ScoreBoardFile –∏–º–µ–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ root:root")
                    logging.info("‚úÖ ScoreBoardFile –∏–º–µ–µ—Ç –≤–ª–∞–¥–µ–ª—å—Ü–∞ root:root")
                else:
                    print("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã ScoreBoardFile ‚Äî –∏—Å–ø—Ä–∞–≤–ª—è—é...")
                    logging.error("‚ùå –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –≤–ª–∞–¥–µ–ª—å—Ü—ã ScoreBoardFile ‚Äî –∏—Å–ø—Ä–∞–≤–ª—è—é...")
                    run_command(f"chown root:root {scoreboard_path}")
                    print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü—ã root:root")
                    logging.info("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã –≤–ª–∞–¥–µ–ª—å—Ü—ã root:root")

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞: –Ω–∏–∫—Ç–æ, –∫—Ä–æ–º–µ root –∏ www-data, –Ω–µ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å
                uid, _ = run_command(f"stat -c %u {scoreboard_path}")
                gid, _ = run_command(f"stat -c %g {scoreboard_path}")
                groupname = group.strip()

                # –ü—Ä–æ–≤–µ—Ä–∏–º –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è "other"
                if perms[8] != 'w':
                    print("‚úÖ –£ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å")
                    logging.info("‚úÖ –£ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å")
                else:
                    print("‚ùå –£ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å ‚Äî —É–±–∏—Ä–∞—é...")
                    logging.error("‚ùå –£ –¥—Ä—É–≥–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å ‚Äî —É–±–∏—Ä–∞—é...")
                    run_command(f"chmod o-w {scoreboard_path}")
                    print("‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è –¥—Ä—É–≥–∏—Ö —É–¥–∞–ª–µ–Ω—ã")
                    logging.info("‚úÖ –ü—Ä–∞–≤–∞ –Ω–∞ –∑–∞–ø–∏—Å—å –¥–ª—è –¥—Ä—É–≥–∏—Ö —É–¥–∞–ª–µ–Ω—ã")
            else:
                print(f"‚ö†Ô∏è –§–∞–π–ª ScoreBoardFile —É–∫–∞–∑–∞–Ω, –Ω–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {scoreboard_path}")
                logging.warning(f"‚ö†Ô∏è –§–∞–π–ª ScoreBoardFile —É–∫–∞–∑–∞–Ω, –Ω–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {scoreboard_path}")
        else:
            print("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –ø—É—Ç—å –∫ ScoreBoardFile")
            logging.warning("‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –ø—É—Ç—å –∫ ScoreBoardFile")
    else:
        print("‚úÖ ScoreBoardFile –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
        logging.info("‚úÖ ScoreBoardFile –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî –≤—Å—ë –Ω–æ—Ä–º–∞–ª—å–Ω–æ")
    print()
    logging.info("")

    # 2.10 –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–ª—è group
    print("[2.10] –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ group –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ /etc/apache2")
    logging.info("[2.10] –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ group –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∑–∞–ø–∏—Å—å –≤ /etc/apache2")
    group_write, _ = run_command("find /etc/apache2 -perm /g=w -ls | grep -v 'lrwxrwxrwx'")
    if group_write.strip():
        print("‚ùå –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–≤–∞–º–∏ group=w:")
        print(group_write.strip())
        logging.warning("‚ùå –ù–∞–π–¥–µ–Ω—ã —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–≤–∞–º–∏ group=w:")
        logging.warning(group_write.strip())
    else:
        print("‚úÖ –ü—Ä–∞–≤–∞ group –≤ –Ω–æ—Ä–º–µ")
        logging.info("‚úÖ –ü—Ä–∞–≤–∞ group –≤ –Ω–æ—Ä–º–µ")
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===\n")
    logging.info("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===\n")

def check_access_controls():
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ Apache ===")
    logging.info("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ Apache ===")
    apache_conf = "/etc/apache2/apache2.conf"

    # 3.1 –ü—Ä–æ–≤–µ—Ä–∫–∞ <Directory />
    print("[3.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (<Directory />)...")
    logging.info("[3.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ (<Directory />)...")
    try:
        with open(apache_conf, "r") as f:
            content = f.read()

        if '<Directory />' in content and 'Require all denied' in content:
            print("‚úÖ –î–æ—Å—Ç—É–ø –∫ <Directory /> –∑–∞–ø—Ä–µ—â—ë–Ω.")
            logging.info("‚úÖ –î–æ—Å—Ç—É–ø –∫ <Directory /> –∑–∞–ø—Ä–µ—â—ë–Ω.")
        else:
            print("‚ùå –î–æ—Å—Ç—É–ø –∫ <Directory /> –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. –î–æ–±–∞–≤–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–∏–≤—É...")
            logging.warning("‚ùå –î–æ—Å—Ç—É–ø –∫ <Directory /> –Ω–µ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω. –î–æ–±–∞–≤–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–∏–≤—É...")
            with open(apache_conf, "a") as f:
                f.write("\n<Directory />\n    Require all denied\n</Directory>\n")
            print("‚úÖ –î–∏—Ä–µ–∫—Ç–∏–≤–∞ <Directory /> –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
            logging.info("‚úÖ –î–∏—Ä–µ–∫—Ç–∏–≤–∞ <Directory /> –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ 3.1: {e}")
        logging.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ 3.1: {e}")

    # 3.2 –ü—Ä–æ–≤–µ—Ä–∫–∞ <Location /portal>
    print("[3.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å—Ç—É–ø–∞ –∫ /portal...")
    logging.info("[3.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –¥–æ—Å—Ç—É–ø–∞ –∫ /portal...")
    try:
        if '<Location /portal>' in content and 'Require valid-user' in content:
            print("‚úÖ –î–æ—Å—Ç—É–ø –∫ /portal –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.")
            logging.info("‚úÖ –î–æ—Å—Ç—É–ø –∫ /portal –æ–≥—Ä–∞–Ω–∏—á–µ–Ω.")
        else:
            print("‚ùå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ /portal –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é...")
            logging.warning("‚ùå –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –Ω–∞ –¥–æ—Å—Ç—É–ø –∫ /portal –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç. –î–æ–±–∞–≤–ª—è–µ–º —Å–µ–∫—Ü–∏—é...")
            with open(apache_conf, "a") as f:
                f.write("\n<Location /portal>\n    Require valid-user\n</Location>\n")
            print("‚úÖ –°–µ–∫—Ü–∏—è <Location /portal> –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
            logging.info("‚úÖ –°–µ–∫—Ü–∏—è <Location /portal> –¥–æ–±–∞–≤–ª–µ–Ω–∞.")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ 3.2: {e}")
        logging.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ 3.2: {e}")

    # 3.3 –ü—Ä–æ–≤–µ—Ä–∫–∞ AllowOverrideList
    print("[3.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥–∏—Ä–µ–∫—Ç–∏–≤—ã AllowOverrideList...")
    logging.info("[3.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è –¥–∏—Ä–µ–∫—Ç–∏–≤—ã AllowOverrideList...")
    try:
        result = run_command("grep -rl 'AllowOverrideList' /etc/apache2")[0].splitlines()
        if result:
            print(f"‚ùå –ù–∞–π–¥–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ AllowOverrideList –≤: {', '.join(result)}")
            logging.warning(f"‚ùå –ù–∞–π–¥–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ AllowOverrideList –≤: {', '.join(result)}")
            for file in result:
                try:
                    with open(file, "r") as f:
                        lines = f.readlines()
                    with open(file, "w") as f:
                        for line in lines:
                            if "AllowOverrideList" not in line:
                                f.write(line)
                    print(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ –∏–∑ {file}")
                    logging.info(f"‚úÖ –£–¥–∞–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ –∏–∑ {file}")
                except Exception as e:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å {file}: {e}")
                    logging.error(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å {file}: {e}")
        else:
            print("‚úÖ AllowOverrideList –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            logging.info("‚úÖ AllowOverrideList –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ 3.3: {e}")
        logging.error(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ 3.3: {e}")

    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===\n")
    logging.info("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ—Å—Ç—É–ø–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ===\n")

def append_if_missing(path, text):
    if not os.path.exists(path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
        logging.error(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
        return False
    with open(path, 'r+') as f:
        content = f.read()
        if text not in content:
            f.write("\n" + text + "\n")
            logging.info(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ –≤ {path}")
            return True
    logging.info(f"‚úÖ –î–∏—Ä–µ–∫—Ç–∏–≤–∞ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ {path}")        
    return False

def comment_out_line_in_file(path, line_start):
    if not os.path.exists(path):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
        logging.error(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
        return False
    with open(path, 'r') as f:
        lines = f.readlines()
    changed = False
    for i, line in enumerate(lines):
        if line.strip().startswith(line_start) and not line.strip().startswith('#'):
            lines[i] = '#' + line
            changed = True
    if changed:
        with open(path, 'w') as f:
            f.writelines(lines)
            logging.info(f"‚úÖ –°—Ç—Ä–æ–∫–∏ —Å {line_start} –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω—ã –≤ {path}")
    return changed

def file_contains(path, text):
    if not os.path.exists(path):
        logging.error(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
        return False
    with open(path) as f:
        return text in f.read()

def ensure_mod_enabled(mod_name):
    out, _ = run_command(f"a2query -m {mod_name}")
    if "enabled" not in out:
        print(f"‚ùå –ú–æ–¥—É–ª—å {mod_name} –Ω–µ –≤–∫–ª—é—á—ë–Ω, –≤–∫–ª—é—á–∞–µ–º...")
        logging.warning(f"‚ùå –ú–æ–¥—É–ª—å {mod_name} –Ω–µ –≤–∫–ª—é—á—ë–Ω, –≤–∫–ª—é—á–∞–µ–º...")
        run_command(f"sudo a2enmod {mod_name}")
        logging.info(f"‚úÖ –ú–æ–¥—É–ª—å {mod_name} –≤–∫–ª—é—á—ë–Ω")
        return True
    logging.info(f"‚úÖ –ú–æ–¥—É–ª—å {mod_name} —É–∂–µ –≤–∫–ª—é—á—ë–Ω")
    return False

def check_and_apply_minimization(allowed_http_methods=None, allowed_extensions=None, hostname=None):
    if allowed_http_methods is None:
        allowed_http_methods = ["GET", "HEAD", "OPTIONS"]
    if allowed_extensions is None:
        allowed_extensions = ["css", "html", "htm", "js", "pdf", "txt", "xml", "xsl", "gif", "ico", "jpeg", "jpg", "png"]

    apache_conf = "/etc/apache2/apache2.conf"
    security_conf = "/etc/apache2/conf-available/security.conf"
    ports_conf = "/etc/apache2/ports.conf"
    www_dir = "/var/www/html"
    cgi_bin = "/usr/local/httpd/cgi-bin"

    print("=== –ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è –æ–ø—Ü–∏–π  ===")
    logging.info("=== –ú–∏–Ω–∏–º–∏–∑–∞—Ü–∏—è –æ–ø—Ü–∏–π ===")

    # 4.1 Options None
    print("[4.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ Options None")
    logging.info("[4.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ Options None")
    options_block = "<Directory />\n    Options None\n</Directory>"
    if not file_contains(apache_conf, "Options None"):
        print("‚ùå –î–æ–±–∞–≤–ª—è–µ–º Options None")
        logging.warning("‚ùå –î–æ–±–∞–≤–ª—è–µ–º Options None")
        append_if_missing(apache_conf, options_block)
    else:
        print("‚úÖ Options None –µ—Å—Ç—å")
        logging.info("‚úÖ Options None –µ—Å—Ç—å")
    # 4.2 –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü
    print("[4.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü")
    logging.info("[4.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã—Ö –≤–µ–±-—Å—Ç—Ä–∞–Ω–∏—Ü")
    index_html = os.path.join(www_dir, "index.html")
    if os.path.exists(index_html):
        print(f"‚ùå –ù–∞–π–¥–µ–Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ {index_html}, —É–¥–∞–ª—è–µ–º")
        try:
            os.remove(index_html)
            logging.info(f"‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ {index_html} —É–¥–∞–ª–µ–Ω–∞")
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {index_html}: {e}")
            logging.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {index_html}: {e}")
    else:
        print("‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
        logging.info("‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç")
    # 4.3 –£–¥–∞–ª–µ–Ω–∏–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ CGI —Å–∫—Ä–∏–ø—Ç–∞ printenv
    print("[4.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ CGI —Å–∫—Ä–∏–ø—Ç–∞ printenv")
    logging.info("[4.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω–æ–≥–æ CGI —Å–∫—Ä–∏–ø—Ç–∞ printenv")
    out, _ = run_command("find /usr -type f -name printenv")
    if out:
        print(f"‚ùå –ù–∞–π–¥–µ–Ω CGI —Å–∫—Ä–∏–ø—Ç printenv: {out}, —É–¥–∞–ª—è–µ–º")
        logging.warning(f"‚ùå –ù–∞–π–¥–µ–Ω CGI —Å–∫—Ä–∏–ø—Ç printenv: {out}, —É–¥–∞–ª—è–µ–º")
        for file_path in out.splitlines():
            try:
                os.remove(file_path)
                logging.info(f"‚úÖ CGI —Å–∫—Ä–∏–ø—Ç {file_path} —É–¥–∞–ª—ë–Ω")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {file_path}: {e}")
                logging.error(f"–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è {file_path}: {e}")
    else:
        print("‚úÖ CGI —Å–∫—Ä–∏–ø—Ç printenv –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        logging.info("‚úÖ CGI —Å–∫—Ä–∏–ø—Ç printenv –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
    # 4.4 –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ HTTP –º–µ—Ç–æ–¥–æ–≤ (–≥–∏–±–∫–∏–π —Å–ø–∏—Å–æ–∫)
    print("[4.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ HTTP –º–µ—Ç–æ–¥–æ–≤")
    logging.info("[4.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–ª–æ–≥–æ —Å–ø–∏—Å–∫–∞ HTTP –º–µ—Ç–æ–¥–æ–≤")
    methods_str = " ".join(allowed_http_methods)
    limit_except_block = f"""<Directory "{cgi_bin}">
    <LimitExcept {methods_str}>
        Require all denied
    </LimitExcept>
</Directory>"""
    if not file_contains(apache_conf, "<LimitExcept"):
        print("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ HTTP –º–µ—Ç–æ–¥–æ–≤")
        logging.warning("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –±–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ HTTP –º–µ—Ç–æ–¥–æ–≤")
        append_if_missing(apache_conf, limit_except_block)
    else:
        print("‚úÖ –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ HTTP –º–µ—Ç–æ–¥–æ–≤ –µ—Å—Ç—å")
        logging.info("‚úÖ –ë–µ–ª—ã–π —Å–ø–∏—Å–æ–∫ HTTP –º–µ—Ç–æ–¥–æ–≤ –µ—Å—Ç—å")
    # 4.5 –û—Ç–∫–ª—é—á–µ–Ω–∏–µ TRACE
    print("[4.5] –ü—Ä–æ–≤–µ—Ä–∫–∞ TraceEnable off")
    logging.info("[4.5] –ü—Ä–æ–≤–µ—Ä–∫–∞ TraceEnable off")
    if not file_contains(security_conf, "TraceEnable off"):
        print("‚ùå –î–æ–±–∞–≤–ª—è–µ–º TraceEnable off")
        logging.warning("‚ùå –î–æ–±–∞–≤–ª—è–µ–º TraceEnable off")
        append_if_missing(security_conf, "TraceEnable off")
        run_command("sudo a2enconf security")
        logging.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è TraceEnable off –¥–æ–±–∞–≤–ª–µ–Ω–∞")
    else:
        print("‚úÖ TRACE –æ—Ç–∫–ª—é—á—ë–Ω")
        logging.info("‚úÖ TRACE –æ—Ç–∫–ª—é—á—ë–Ω")
    # 4.6 –û—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö HTTP –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤
    print("[4.6] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö HTTP –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤")
    logging.info("[4.6] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö HTTP –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤")
    ensure_mod_enabled("rewrite")
    rewrite_rules_46 = """
RewriteEngine On
RewriteCond %{THE_REQUEST} !HTTP/1\\.1$
RewriteRule .* - [F]
"""
    conf_content = ""
    if os.path.exists(apache_conf):
        conf_content = open(apache_conf).read()
    if "RewriteEngine On" not in conf_content or "RewriteCond %{THE_REQUEST} !HTTP/1\\.1$" not in conf_content:
        print("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤")
        logging.warning("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–∞–≤–∏–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —É—Å—Ç–∞—Ä–µ–≤—à–∏—Ö –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤")
        append_if_missing(apache_conf, rewrite_rules_46)
    else:
        print("‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –µ—Å—Ç—å")
        logging.info("‚úÖ –ü—Ä–∞–≤–∏–ª–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ –µ—Å—Ç—å")
    # 4.7 –ó–∞–ø—Ä–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ .ht* —Ñ–∞–π–ª–∞–º
    print("[4.7] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ .ht* —Ñ–∞–π–ª–∞–º")
    logging.info("[4.7] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—Ç–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ .ht* —Ñ–∞–π–ª–∞–º")
    ht_rule = """<FilesMatch "^\\.ht">
    Require all denied
</FilesMatch>"""
    if not file_contains(apache_conf, ht_rule):
        print("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ .ht* —Ñ–∞–π–ª–∞–º")
        logging.warning("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ .ht* —Ñ–∞–π–ª–∞–º")
        append_if_missing(apache_conf, ht_rule)
    else:
        print("‚úÖ –ó–∞–ø—Ä–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ .ht* —Ñ–∞–π–ª–∞–º –µ—Å—Ç—å")
        logging.info("‚úÖ –ó–∞–ø—Ä–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ .ht* —Ñ–∞–π–ª–∞–º –µ—Å—Ç—å")
    # 4.8 –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π (–≥–∏–±–∫–∏–π —Å–ø–∏—Å–æ–∫)
    print("[4.8] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π")
    logging.info("[4.8] –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π")
    deny_all = """<FilesMatch "^.*$">
    Require all denied
</FilesMatch>"""
    allowed_regex = "|".join([ext.replace(".", "\\.") for ext in allowed_extensions])
    allow_some = f"""<FilesMatch "^.*\\.({allowed_regex})$">
    Require all granted
</FilesMatch>"""
    if deny_all not in conf_content or allow_some not in conf_content:
        print("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π")
        logging.warning("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π")
        append_if_missing(apache_conf, deny_all)
        append_if_missing(apache_conf, allow_some)
    else:
        print("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –µ—Å—Ç—å")
        logging.info("‚úÖ –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π –µ—Å—Ç—å")
    # 4.9 –ó–∞–ø—Ä–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ IP –∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏–º HTTP
    print("[4.9] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ IP –∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏–º HTTP")
    logging.info("[4.9] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—Ä–µ—Ç–∞ –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ IP –∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏–º HTTP")
    ensure_mod_enabled("rewrite")
    if not hostname:
        hostname = "hostname.domain.zone"  # –ó–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π hostname
    ip_rewrite = f"""
RewriteEngine On
RewriteCond %{{THE_REQUEST}} HTTP\\/((0\\.9)|(1\\.0))$ [OR]
RewriteCond %{{HTTP_HOST}} !^{hostname}$
RewriteRule .* - [F]
"""
    if "RewriteCond %{THE_REQUEST} HTTP\\/((0\\.9)|(1\\.0))$" not in conf_content:
        print("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ IP –∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏–º HTTP")
        logging.warning("‚ùå –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ IP –∏ —É—Å—Ç–∞—Ä–µ–≤—à–∏–º HTTP")
        append_if_missing(apache_conf, ip_rewrite)
    else:
        print("‚úÖ –ó–∞–ø—Ä–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ IP –µ—Å—Ç—å")
        logging.info("‚úÖ –ó–∞–ø—Ä–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –ø–æ IP –µ—Å—Ç—å")

    # 4.10 –û—Ç–∫–ª—é—á–µ–Ω–∏–µ Listen 80, –≤–∫–ª—é—á–µ–Ω–∏–µ Listen 443
    print("[4.10] –ü—Ä–æ–≤–µ—Ä–∫–∞ Listen 80 –∏ 443")
    logging.info("[4.10] –ü—Ä–æ–≤–µ—Ä–∫–∞ Listen 80 –∏ 443")
    if os.path.exists(ports_conf):
        with open(ports_conf, 'r') as f:
            ports_conf_text = f.read()
        if "Listen 80" in ports_conf_text and "#Listen 80" not in ports_conf_text:
            print("‚ùå –ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º Listen 80")
            logging.warning("‚ùå –ö–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ–º Listen 80")
            comment_out_line_in_file(ports_conf, "Listen 80")
        else:
            print("‚úÖ Listen 80 —É–∂–µ –æ—Ç–∫–ª—é—á—ë–Ω")
            logging.info("‚úÖ Listen 80 —É–∂–µ –æ—Ç–∫–ª—é—á—ë–Ω")
        if "Listen 443" not in ports_conf_text:
            print("‚ùå –î–æ–±–∞–≤–ª—è–µ–º Listen 443")
            logging.warning("‚ùå –î–æ–±–∞–≤–ª—è–µ–º Listen 443")
            append_if_missing(ports_conf, "Listen 443")
        else:
            print("‚úÖ Listen 443 –µ—Å—Ç—å")
            logging.info("‚úÖ Listen 443 –µ—Å—Ç—å")
    else:
        print(f"‚ùå –§–∞–π–ª {ports_conf} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        logging.error(f"‚ùå –§–∞–π–ª {ports_conf} –Ω–µ –Ω–∞–π–¥–µ–Ω")

    # 4.11 Content-Security-Policy –∑–∞–≥–æ–ª–æ–≤–æ–∫
    print("[4.11] –ü—Ä–æ–≤–µ—Ä–∫–∞ Content-Security-Policy")
    logging.info("[4.11] –ü—Ä–æ–≤–µ—Ä–∫–∞ Content-Security-Policy")
    out, _ = run_command("grep -r 'Content-Security-Policy' /etc/apache2/")
    if "Content-Security-Policy" in out:
        print("‚úÖ CSP –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É–∂–µ –µ—Å—Ç—å")
        logging.info("‚úÖ CSP –∑–∞–≥–æ–ª–æ–≤–æ–∫ —É–∂–µ –µ—Å—Ç—å")
    else:
        print("‚ùå –í–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å headers –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫")
        logging.warning("‚ùå –í–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å headers –∏ –¥–æ–±–∞–≤–ª—è–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫")
        changed = ensure_mod_enabled("headers")
        csp_header = 'Header always append Content-Security-Policy "frame-ancestors \'self\';"'
        if not file_contains(apache_conf, csp_header):
            append_if_missing(apache_conf, csp_header)
        if changed:
            print("‚ö†Ô∏è –ú–æ–¥—É–ª—å headers –±—ã–ª –≤–∫–ª—é—á—ë–Ω, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å apache.")
            logging.warning("‚ö†Ô∏è –ú–æ–¥—É–ª—å headers –±—ã–ª –≤–∫–ª—é—á—ë–Ω, –Ω—É–∂–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç—å apache.")
        print("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ apache: sudo systemctl restart apache2")
        logging.warning("‚ö†Ô∏è –í–æ–∑–º–æ–∂–Ω–æ, –ø–æ—Ç—Ä–µ–±—É–µ—Ç—Å—è –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ apache: sudo systemctl restart apache2")

    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã ===\n")
    logging.info("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–∏–Ω–∏–º–∏–∑–∞—Ü–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã ===\n")


def check_logging_settings():
    print("=== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===")
    logging.info("=== –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ===")

    apache_conf = "/etc/apache2/apache2.conf"
    logrotate_path = "/etc/logrotate.d/apache2"
    desired_loglevels = ["info", "notice", "core:info", "debug"]

    # === 5.1 LogLevel ===
    print("[5.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ LogLevel...")
    logging.info("[5.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ LogLevel...")
    try:
        with open(apache_conf, "r") as f:
            lines = f.readlines()

        new_lines = []
        loglevel_found = False
        updated = False

        for line in lines:
            if line.strip().startswith("LogLevel"):
                loglevel_found = True
                current_value = line.strip().split(maxsplit=1)[1] if len(line.strip().split()) > 1 else ""
                if current_value.lower() not in desired_loglevels:
                    print(f"‚ùå LogLevel = '{current_value}', –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 'info'")
                    logging.warning(f"‚ùå LogLevel = '{current_value}', –∑–∞–º–µ–Ω—è–µ–º –Ω–∞ 'info'")
                    new_lines.append("LogLevel info\n")
                    updated = True
                else:
                    print("‚úÖ LogLevel –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω:", current_value)
                    logging.info(f"‚úÖ LogLevel –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω: {current_value}")
                    new_lines.append(line)
            else:
                new_lines.append(line)

        if not loglevel_found:
            print("‚ùå LogLevel –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º LogLevel info")
            logging.warning("‚ùå LogLevel –Ω–µ –Ω–∞–π–¥–µ–Ω, –¥–æ–±–∞–≤–ª—è–µ–º LogLevel info")
            new_lines.append("\nLogLevel info\n")
            updated = True

        if updated:
            with open(apache_conf, "w") as f:
                f.writelines(new_lines)
            logging.info("‚úÖ LogLevel —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚Üí info")
            print("‚úÖ LogLevel —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω ‚Üí info")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ LogLevel:", str(e))
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ LogLevel: {e}")
    print()
    logging.info("")

    # === 5.2 ErrorLog ‚Üí syslog ===
    print("[5.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ ErrorLog –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ syslog...")
    logging.info("[5.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ ErrorLog –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤ syslog...")
    errorlog_output, _ = run_command('grep -E -i "^\\s*ErrorLog\\s+\\S+" /etc/apache2/*.conf')
    if "syslog" in errorlog_output:
        print("‚úÖ ErrorLog —É–∂–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ syslog:", errorlog_output.strip())
        logging.info(f"‚úÖ ErrorLog —É–∂–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ syslog: {errorlog_output.strip()}")
    else:
        try:
            with open(apache_conf, "a") as f:
                f.write('\nErrorLog "syslog:local1"\n')
            print("‚úÖ ErrorLog –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ syslog (apache2.conf)")
            logging.info("‚úÖ ErrorLog –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω –≤ syslog (apache2.conf)")
            subprocess.run(["systemctl", "restart", "apache2"], check=False)
            print("üîÅ Apache –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
            logging.info("üîÅ Apache –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ErrorLog:", str(e))
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ ErrorLog: {e}")
    print()
    logging.info("")
    # === 5.3 AccessLog ‚Üí CEF ===
    print("[5.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ AccessLog (CEF)...")
    logging.info("[5.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç–∞ AccessLog (CEF)...")
    cef_check, _ = run_command('grep -ir "logformat" /etc/apache2/')
    if "CEF:" in cef_check:
        print("‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–æ—Ä–º–∞—Ç CEF –≤ LogFormat")
        logging.info("‚úÖ –ù–∞–π–¥–µ–Ω —Ñ–æ—Ä–º–∞—Ç CEF –≤ LogFormat")
    else:
        try:
            cef_format = '''\nLogFormat "CEF:0|Apache|apache||%>s|%m %U%q|Unknown|end=%{%b %d %Y %H:%M:%S}t app=HTTP cs2=%H suser=%u shost=%h src=%a dhost=%V dpt=%p dproc=apache request=%U requestMethod=%m fname=%f cs1Label=Virtual Host cs1=%v cn1Label=Response Time cn1=%T out=%B cs4Label=Referer cs4=%{Referer}i dvchost=%v dvc=%A deviceProcessName=apache_access_log requestClientApplication=%{User-Agent}i cs3Label=X-Forwarded-For cs3=%{X-Forwarded-For}i" cef\nCustomLog /var/log/apache2/access.log cef\n'''
            with open(apache_conf, "a") as f:
                f.write(cef_format)
            print("‚úÖ CEF —Ñ–æ—Ä–º–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ apache2.conf")
            logging.info("‚úÖ CEF —Ñ–æ—Ä–º–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ apache2.conf")
            subprocess.run(["systemctl", "restart", "apache2"], check=False)
            print("üîÅ Apache –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
            logging.info("üîÅ Apache –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω")
        except Exception as e:
            print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ CEF —Ñ–æ—Ä–º–∞—Ç–∞:", str(e))
            logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏ CEF —Ñ–æ—Ä–º–∞—Ç–∞: {e}")
    print()
    logging.info("")
    # === 5.4 –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ ===
    print("[5.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ Apache...")
    logging.info("[5.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ Apache...")
    if os.path.isfile(logrotate_path):
        with open(logrotate_path, "r") as f:
            content = f.read()
        if "daily" in content and "rotate 90" in content:
            print("‚úÖ –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (daily + 90 —Ä–æ—Ç–∞—Ü–∏–π)")
            logging.info("‚úÖ –†–æ—Ç–∞—Ü–∏—è –ª–æ–≥–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ (daily + 90 —Ä–æ—Ç–∞—Ü–∏–π)")
        else:
            print("‚ùå –†–æ—Ç–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –û–±–Ω–æ–≤–ª—è–µ–º...")
            logging.warning("‚ùå –†–æ—Ç–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –û–±–Ω–æ–≤–ª—è–µ–º...")
            try:
                new_rotate = '''/var/log/apache2/*.log {
    daily
    rotate 90
    missingok
    notifempty
    compress
    delaycompress
    sharedscripts
    postrotate
        /etc/init.d/apache2 reload > /dev/null
    endscript
}'''
                with open(logrotate_path, "w") as f:
                    f.write(new_rotate)
                print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ Apache –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
                logging.info("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ Apache –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
            except Exception as e:
                print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ—Ç–∞—Ü–∏–∏:", str(e))
                logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ —Ä–æ—Ç–∞—Ü–∏–∏: {e}")
    else:
        print("‚ùå –§–∞–π–ª —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ Apache –Ω–µ –Ω–∞–π–¥–µ–Ω:", logrotate_path)
        logging.error(f"‚ùå –§–∞–π–ª —Ä–æ—Ç–∞—Ü–∏–∏ –ª–æ–≥–æ–≤ Apache –Ω–µ –Ω–∞–π–¥–µ–Ω: {logrotate_path}")
    print("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã ===\n")
    logging.info("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω—ã ===\n")



def read_file(path):
    if os.path.exists(path):
        try:
            with open(path, "r") as f:
                content = f.read()
            logging.info(f"–ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞: {path}")
            return content
        except Exception as e:
            logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ —Ñ–∞–π–ª–∞ {path}: {e}")
            return ""
    else:
        logging.warning(f"–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏: {path}")
        return ""

def write_file(path, content):
    try:
        with open(path, "w") as f:
            f.write(content)
        logging.info(f"–ó–∞–ø–∏—Å—å —Ñ–∞–π–ª–∞: {path}")
    except Exception as e:
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø–∏—Å–∏ —Ñ–∞–π–ª–∞ {path}: {e}")

def replace_or_append(path, directive_start, new_directive, label=""):
    """
    –ó–∞–º–µ–Ω—è–µ—Ç —Å—Ç—Ä–æ–∫–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å directive_start, –Ω–∞ new_directive.
    –ï—Å–ª–∏ —Ç–∞–∫–∏—Ö —Å—Ç—Ä–æ–∫ –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç new_directive –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞.
    """
    if not os.path.exists(path):
        print(f"‚ùå {label}–§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        logging.error(f"{label}–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
        return

    lines = []
    replaced = False
    with open(path, "r") as f:
        for line in f:
            if line.strip().startswith(directive_start):
                if not replaced:
                    lines.append(new_directive + "\n")
                    replaced = True
                    logging.info(f"{label}–ó–∞–º–µ–Ω–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ {directive_start} ‚Üí {new_directive}")
                # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ —Å —ç—Ç–∏–º –¥–∏—Ä–µ–∫—Ç–∏–≤–∞–º–∏ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
            else:
                lines.append(line)
    if not replaced:
        lines.append(new_directive + "\n")
        logging.info(f"{label}–î–æ–±–∞–≤–ª–µ–Ω–∞ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ –≤ –∫–æ–Ω–µ—Ü: {new_directive}")

    write_file(path, "".join(lines))
    print(f"‚úÖ {label}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {new_directive.strip()}")

def insert_into_virtualhost_if_missing(path, directive, label=""):
    """
    –í—Å—Ç–∞–≤–ª—è–µ—Ç –¥–∏—Ä–µ–∫—Ç–∏–≤—É –≤–Ω—É—Ç—Ä—å –±–ª–æ–∫–∞ <VirtualHost *:443>, –µ—Å–ª–∏ –µ—ë —Ç–∞–º –Ω–µ—Ç.
    """
    if not os.path.exists(path):
        print(f"‚ùå {label}–§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        logging.error(f"{label}–§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {path}")
        return

    with open(path, "r") as f:
        content = f.read()

    if directive in content:
        print(f"‚úÖ {label}{directive.strip()} —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
        logging.info(f"{label}–î–∏—Ä–µ–∫—Ç–∏–≤–∞ —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {directive.strip()}")
        return

    start = content.find("<VirtualHost *:443>")
    end = content.find("</VirtualHost>", start)
    if start == -1 or end == -1:
        print(f"‚ùå {label}–ë–ª–æ–∫ <VirtualHost *:443> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {path}")
        logging.error(f"{label}–ë–ª–æ–∫ <VirtualHost *:443> –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ {path}")
        return

    new_content = content[:end] + f"\n    {directive}\n" + content[end:]
    write_file(path, new_content)
    print(f"‚úÖ {label}–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ VirtualHost: {directive.strip()}")
    logging.info(f"{label}–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ VirtualHost: {directive.strip()}")

def check_ssl_tls_settings():
    print("=== SSL/TLS –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===")
    logging.info("=== SSL/TLS –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ===")
    apache_conf      = "/etc/apache2/apache2.conf"
    ssl_conf         = "/etc/apache2/mods-available/ssl.conf"
    default_ssl_conf = "/etc/apache2/sites-available/default-ssl.conf"
    private_key_dir  = "/etc/ssl/private"

    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
    def replace_directive(path, prefix, new_line, label=""):
        """
        –ó–∞–º–µ–Ω—è–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ—Å—è —Å prefix, –Ω–∞ new_line.
        –ï—Å–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π —Ç–∞–∫–æ–π —Å—Ç—Ä–æ–∫–∏ –Ω–µ—Ç ‚Äî –¥–æ–±–∞–≤–ª—è–µ—Ç new_line –≤ –∫–æ–Ω–µ—Ü —Ñ–∞–π–ª–∞.
        """
        if not os.path.exists(path):
            print(f"‚ùå {label}–§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            logging.error(f"{label}–§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        lines, replaced = [], False
        with open(path, "r") as f:
            for ln in f:
                if ln.strip().startswith(prefix):
                    if not replaced:
                        lines.append(new_line + "\n")
                        replaced = True
                    # –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ
                else:
                    lines.append(ln)
        if not replaced:
            lines.append(new_line + "\n")
        with open(path, "w") as f:
            f.writelines(lines)
        print(f"‚úÖ {label}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {new_line}")
        logging.info(f"{label}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {new_line}")

    def insert_into_vhost(path, directive, label=""):
        """
        –í—Å—Ç–∞–≤–ª—è–µ—Ç directive –≤–Ω—É—Ç—Ä—å –ø–µ—Ä–≤–æ–≥–æ –±–ª–æ–∫–∞ <VirtualHost *:443>.
        """
        if not os.path.exists(path):
            print(f"‚ùå –§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            logging.error(f"{label}–§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        content = open(path).read()
        if directive in content:
            print(f"‚úÖ {directive} —É–∂–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ {path}")
            return
        start = content.find("<VirtualHost *:443>")
        end   = content.find("</VirtualHost>", start)
        if start == -1 or end == -1:
            print(f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω –±–ª–æ–∫ <VirtualHost *:443> –≤ {path}")
            return
        new_content = content[:end] + f"    {directive}\n" + content[end:]
        with open(path, "w") as f:
            f.write(new_content)
        print(f"‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –≤ VirtualHost: {directive}")
        logging.info(f"{label}–î–æ–±–∞–≤–ª–µ–Ω–æ –≤ VirtualHost: {directive}")
    # 6.1 SSLEngine –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã
    print("[6.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ SSLEngine –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...")
    logging.info("[6.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ SSLEngine –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤...")
    ssl_eng, _ = run_command('grep -R "^\s*SSLEngine" /etc/apache2/ | grep -v "#"')
    cert_f, _  = run_command('grep -R "^\s*SSLCertificateFile" /etc/apache2/ | grep -v "#"')
    key_f, _   = run_command('grep -R "^\s*SSLCertificateKeyFile" /etc/apache2/ | grep -v "#"')
    if "SSLEngine On" in ssl_eng and cert_f and key_f:
        print("‚úÖ SSL Engine –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.")
        logging.info("SSL Engine –∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã —É–∂–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã.")
    else:
        print("‚ùå –ò—Å–ø—Ä–∞–≤–ª—è—é default-ssl.conf...")
        logging.warning("–ò—Å–ø—Ä–∞–≤–ª—è—é default-ssl.conf –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ SSL")
        if os.path.exists(default_ssl_conf):
            for directive in (
                "SSLEngine On",
                "SSLCertificateFile /etc/ssl/certs/ssl-cert-snakeoil.pem",
                "SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key"
            ):
                insert_into_vhost(default_ssl_conf, directive, "[6.1] ")
            run_command("sudo a2ensite default-ssl.conf")
        else:
            print("‚ùå default-ssl.conf –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî SSL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
            logging.error("default-ssl.conf –Ω–µ –Ω–∞–π–¥–µ–Ω ‚Äî SSL –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")

    # 6.2 –ü—Ä–∞–≤–∞ –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á
    print("[6.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á...")
    logging.info("[6.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á")
    if os.path.isdir(private_key_dir):
        owner, _ = run_command(f"stat -c %U {private_key_dir}")
        group, _ = run_command(f"stat -c %G {private_key_dir}")
        perms, _ = run_command(f"stat -c %a {private_key_dir}")
        if owner=="root" and group=="root" and perms=="400":
            print("‚úÖ –ü—Ä–∞–≤–∞ –∏ –≤–ª–∞–¥–µ–ª—å—Ü—ã –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã.")
            logging.info("–ü—Ä–∞–≤–∞ –∏ –≤–ª–∞–¥–µ–ª—å—Ü—ã –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã.")
        else:
            print("‚ùå –ò—Å–ø—Ä–∞–≤–ª—è—é –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –ø—Ä–∞–≤–∞...")
            logging.warning("–ò—Å–ø—Ä–∞–≤–ª—è—é –≤–ª–∞–¥–µ–ª—å—Ü–∞ –∏ –ø—Ä–∞–≤–∞ –ø—Ä–∏–≤–∞—Ç–Ω–æ–≥–æ –∫–ª—é—á–∞")
            run_command(f"sudo chown root:root {private_key_dir} -R")
            run_command(f"sudo chmod 400 {private_key_dir} -R")
    else:
        print("‚ùå –ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω.")
        logging.error("–ö–∞—Ç–∞–ª–æ–≥ –ø—Ä–∏–≤–∞—Ç–Ω—ã—Ö –∫–ª—é—á–µ–π –Ω–µ –Ω–∞–π–¥–µ–Ω.")

    # 6.3 SSLProtocol
    print("[6.3] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSLProtocol...")
    logging.info("[6.3] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSLProtocol")
    replace_directive(
        ssl_conf,
        "SSLProtocol",
        "SSLProtocol -all +TLSv1.2 +TLSv1.3",
        "[6.3] "
    )

    # 6.4 –ë–µ–∑–æ–ø–∞—Å–Ω—ã–µ cipher suites
    print("[6.4] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSLHonorCipherOrder –∏ SSLCipherSuite...")
    logging.info("[6.4] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ SSLHonorCipherOrder –∏ SSLCipherSuite")
    replace_directive(apache_conf,
                      "SSLHonorCipherOrder",
                      "SSLHonorCipherOrder On",
                      "[6.4] ")
    replace_directive(apache_conf,
                      "SSLCipherSuite",
                      "SSLCipherSuite ALL:!EXP:!NULL:!ADH:!LOW:!SSLv2:!SSLv3:!MD5:!RC4:!aNULL:!3DES:!IDEA",
                      "[6.4] ")

    # 6.5 SSLInsecureRenegotiation off
    print("[6.5] –û—Ç–∫–ª—é—á–µ–Ω–∏–µ SSLInsecureRenegotiation...")
    logging.info("[6.5] –û—Ç–∫–ª—é—á–µ–Ω–∏–µ SSLInsecureRenegotiation")
    replace_directive(apache_conf,
                      "SSLInsecureRenegotiation",
                      "SSLInsecureRenegotiation off",
                      "[6.5] ")

    # 6.6 SSLCompression off
    print("[6.6] –û—Ç–∫–ª—é—á–µ–Ω–∏–µ SSLCompression...")
    logging.info("[6.6] –û—Ç–∫–ª—é—á–µ–Ω–∏–µ SSLCompression")
    replace_directive(apache_conf,
                      "SSLCompression",
                      "SSLCompression off",
                      "[6.6] ")

    # 6.7 HSTS
    print("[6.7] –í–∫–ª—é—á–µ–Ω–∏–µ HSTS...")
    logging.info("[6.7] –í–∫–ª—é—á–µ–Ω–∏–µ HSTS")
    insert_into_vhost(default_ssl_conf,
                      'Header always set Strict-Transport-Security "max-age=15678000; includeSubDomains"',
                      "[6.7] ")

    # 6.8 ServerTokens Prod
    print("[6.8] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ServerTokens Prod...")
    logging.info("[6.8] –£—Å—Ç–∞–Ω–æ–≤–∫–∞ ServerTokens Prod")
    replace_directive(apache_conf,
                      "ServerTokens",
                      "ServerTokens Prod",
                      "[6.8] ")

    # 6.9 ServerSignature Off
    print("[6.9] –û—Ç–∫–ª—é—á–µ–Ω–∏–µ ServerSignature...")
    logging.info("[6.9] –û—Ç–∫–ª—é—á–µ–Ω–∏–µ ServerSignature")
    replace_directive(apache_conf,
                      "ServerSignature",
                      "ServerSignature Off",
                      "[6.9] ")

    # 6.10 FileETag None
    print("[6.10] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ FileETag None...")
    logging.info("[6.10] –ù–∞—Å—Ç—Ä–æ–π–∫–∞ FileETag None")
    replace_directive(apache_conf,
                      "FileETag",
                      "FileETag None",
                      "[6.10] ")

    print("\n=== –ü—Ä–æ–≤–µ—Ä–∫–∏ SSL/TLS –∑–∞–≤–µ—Ä—à–µ–Ω—ã ===\n")
    logging.info("=== –ü—Ä–æ–≤–µ—Ä–∫–∏ SSL/TLS –∑–∞–≤–µ—Ä—à–µ–Ω—ã ===")

def set_dos_prevention():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤, –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞—é—â–∏—Ö –æ—Ç–∫–∞–∑ –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏.
    –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è Timeout, KeepAlive, MaxKeepAliveRequests, KeepAliveTimeout, RequestReadTimeout.
    """

    apache_conf = "/etc/apache2/apache2.conf"

    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–∏–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    def replace_directive(path, prefix, new_line, label=""):
        if not os.path.exists(path):
            print(f"‚ùå –§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            logging.error(f"{label}–§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return
        lines = []
        replaced = False
        with open(path, "r") as f:
            for ln in f:
                if ln.strip().startswith(prefix):
                    if not replaced:
                        lines.append(new_line + "\n")
                        replaced = True
                else:
                    lines.append(ln)
        if not replaced:
            lines.append(new_line + "\n")
        with open(path, "w") as f:
            f.writelines(lines)
        print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {new_line}")
        logging.info(f"{label}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {new_line}")
    # 7.1 –î–∏—Ä–µ–∫—Ç–∏–≤–∞ Timeout
    print("[7.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Timeout...")
    logging.info("[7.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Timeout")
    timeout_setting = "Timeout 20"
    replace_directive(apache_conf, "Timeout", timeout_setting, "[7.1] ")

    # 7.2 –î–∏—Ä–µ–∫—Ç–∏–≤–∞ KeepAlive
    print("[7.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ KeepAlive...")
    logging.info("[7.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ KeepAlive")
    keepalive_setting = "KeepAlive On"
    replace_directive(apache_conf, "KeepAlive", keepalive_setting, "[7.2] ")

    # 7.3 –ó–Ω–∞—á–µ–Ω–∏–µ MaxKeepAliveRequests
    print("[7.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ MaxKeepAliveRequests...")
    logging.info("[7.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ MaxKeepAliveRequests")
    max_keepalive_requests = "MaxKeepAliveRequests 100"
    replace_directive(apache_conf, "MaxKeepAliveRequests", max_keepalive_requests, "[7.3] ")

    # 7.4 –ó–Ω–∞—á–µ–Ω–∏–µ KeepAliveTimeout
    print("[7.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ KeepAliveTimeout...")
    logging.info("[7.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ KeepAliveTimeout")
    keepalive_timeout = "KeepAliveTimeout 15"
    replace_directive(apache_conf, "KeepAliveTimeout", keepalive_timeout, "[7.4] ")

    # 7.5 –ó–Ω–∞—á–µ–Ω–∏–µ RequestReadTimeout
    print("[7.5] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ RequestReadTimeout...")
    logging.info("[7.5] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ RequestReadTimeout")
    request_read_timeout = "RequestReadTimeout header=20-40,MinRate=500 body=20,MinRate=500"
    replace_directive(apache_conf, "RequestReadTimeout", request_read_timeout, "[7.5] ")

    print("\n=== –ú–µ—Ä—ã –ø–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—é –æ—Ç–∫–∞–∑–∞ –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã ===\n")
    logging.info("=== –ú–µ—Ä—ã –ø–æ –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—é –æ—Ç–∫–∞–∑–∞ –≤ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã ===")

def set_request_limits():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Apache.
    –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è LimitRequestLine, LimitRequestFields, LimitRequestFieldsize, LimitRequestBody.
    """

    apache_conf = "/etc/apache2/sites-enabled/default-ssl.conf"

    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–∏–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    def replace_directive(path, prefix, new_line, label=""):
        if not os.path.exists(path):
            print(f"‚ùå –§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            logging.error(f"{label}–§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        lines = []
        inside_virtualhost = False  # —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ –±–ª–æ–∫–µ VirtualHost
        directive_found = False  # —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–∞–π–¥–µ–Ω–∞ –ª–∏ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞

        with open(path, "r") as f:
            for ln in f:
                if "<VirtualHost" in ln:  # –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±–ª–æ–∫–∞ VirtualHost
                    inside_virtualhost = True

                if "</VirtualHost>" in ln:  # –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –±–ª–æ–∫–∞ VirtualHost
                    inside_virtualhost = False

                # –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –±–ª–æ–∫–µ <VirtualHost>, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã
                if inside_virtualhost and ln.strip().startswith(prefix):
                    directive_found = True

                lines.append(ln)

        # –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã –Ω–µ –±—ã–ª–æ –≤ –±–ª–æ–∫–µ <VirtualHost>, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë
        if not directive_found:
            for i in range(len(lines)):
                if "<VirtualHost" in lines[i]:  # –Ω–∞—à–ª–∏ –Ω–∞—á–∞–ª–æ –±–ª–æ–∫–∞ <VirtualHost>
                    lines.insert(i + 1, new_line + "\n")  # –¥–æ–±–∞–≤–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–∏–≤—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ
                    print(f"‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {new_line}")
                    logging.info(f"{label}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {new_line}")
                    break
        else:
            print(f"‚úÖ –î–∏—Ä–µ–∫—Ç–∏–≤–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {new_line}")
            logging.info(f"{label}–î–∏—Ä–µ–∫—Ç–∏–≤–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {new_line}")
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –∫–æ–Ω—Ñ–∏–≥
        with open(path, "w") as f:
            f.writelines(lines)

    # 8.1 –î–∏—Ä–µ–∫—Ç–∏–≤–∞ LimitRequestLine
    print("[8.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ LimitRequestLine...")
    logging.info("[8.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ LimitRequestLine")
    limit_request_line = "LimitRequestLine 8190"
    replace_directive(apache_conf, "LimitRequestLine", limit_request_line, "[8.1] ")

    # 8.2 –î–∏—Ä–µ–∫—Ç–∏–≤–∞ LimitRequestFields
    print("[8.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ LimitRequestFields...")
    logging.info("[8.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ LimitRequestFields")
    limit_request_fields = "LimitRequestFields 100"
    replace_directive(apache_conf, "LimitRequestFields", limit_request_fields, "[8.2] ")

    # 8.3 –î–∏—Ä–µ–∫—Ç–∏–≤–∞ LimitRequestFieldsize
    print("[8.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ LimitRequestFieldsize...")
    logging.info("[8.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ LimitRequestFieldsize")
    limit_request_fieldsize = "LimitRequestFieldsize 49152"
    replace_directive(apache_conf, "LimitRequestFieldsize", limit_request_fieldsize, "[8.3] ")

    # 8.4 –î–∏—Ä–µ–∫—Ç–∏–≤–∞ LimitRequestBody
    print("[8.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ LimitRequestBody...")
    logging.info("[8.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ LimitRequestBody")
    limit_request_body = "LimitRequestBody 102400"
    replace_directive(apache_conf, "LimitRequestBody", limit_request_body, "[8.4] ")

    print("\n=== –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã ===\n")
    logging.info("=== –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã ===")

def set_browser_security():
    """
    –§—É–Ω–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ Apache.
    –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è X-Frame-Options, X-Content-Type-Options, X-XSS-Protection, Referrer-Policy.
    """

    apache_conf = "/etc/apache2/sites-enabled/default-ssl.conf"

    # –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–º–µ–Ω—ã –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–∏—Ä–µ–∫—Ç–∏–≤ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    def replace_directive(path, new_line, label=""):
        if not os.path.exists(path):
            print(f"‚ùå –§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            logging.error(f"{label}–§–∞–π–ª {path} –Ω–µ –Ω–∞–π–¥–µ–Ω")
            return

        lines = []
        inside_virtualhost = False  # —Ñ–ª–∞–≥, —á—Ç–æ–±—ã –æ—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å, –Ω–∞—Ö–æ–¥–∏–º—Å—è –ª–∏ –º—ã –≤ –±–ª–æ–∫–µ VirtualHost
        directive_found = False  # —Ñ–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω–∞–π–¥–µ–Ω–∞ –ª–∏ –¥–∏—Ä–µ–∫—Ç–∏–≤–∞ –≤ –±–ª–æ–∫–µ

        with open(path, "r") as f:
            for ln in f:
                if "<VirtualHost" in ln:  # –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –æ—Ç–∫—Ä—ã—Ç–∏–µ –±–ª–æ–∫–∞ VirtualHost
                    inside_virtualhost = True
                if "</VirtualHost>" in ln:  # –µ—Å–ª–∏ –Ω–∞—à–ª–∏ –∑–∞–∫—Ä—ã—Ç–∏–µ –±–ª–æ–∫–∞ VirtualHost
                    inside_virtualhost = False

                # –ï—Å–ª–∏ –Ω–∞—Ö–æ–¥–∏–º—Å—è –≤ –±–ª–æ–∫–µ <VirtualHost>, –ø—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã
                if inside_virtualhost and new_line.strip() in ln:
                    directive_found = True  # –î–∏—Ä–µ–∫—Ç–∏–≤–∞ —É–∂–µ –Ω–∞–π–¥–µ–Ω–∞

                lines.append(ln)

        # –ï—Å–ª–∏ –¥–∏—Ä–µ–∫—Ç–∏–≤—ã –Ω–µ –±—ã–ª–æ –≤ –±–ª–æ–∫–µ <VirtualHost>, –¥–æ–±–∞–≤–ª—è–µ–º –µ—ë
        if not directive_found:
            for i in range(len(lines)):
                if "<VirtualHost" in lines[i]:  # –Ω–∞—à–ª–∏ –Ω–∞—á–∞–ª–æ –±–ª–æ–∫–∞ <VirtualHost>
                    lines.insert(i + 1, new_line + "\n")  # –¥–æ–±–∞–≤–ª—è–µ–º –¥–∏—Ä–µ–∫—Ç–∏–≤—É —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ
                    print(f"‚úÖ {label}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {new_line}")
                    logging.info(f"{label}–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {new_line}")
                    break
        else:
            print(f"‚úÖ –î–∏—Ä–µ–∫—Ç–∏–≤–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø—Ä–æ–ø—É—Å–∫ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è: {new_line}")
            logging.info(f"{label}–î–∏—Ä–µ–∫—Ç–∏–≤–∞ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {new_line}")
        # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ –∫–æ–Ω—Ñ–∏–≥
        with open(path, "w") as f:
            f.writelines(lines)

    # 9.1 –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ X-Frame-Options
    print("[9.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ X-Frame-Options...")
    logging.info("[9.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ X-Frame-Options")
    x_frame_options = "Header always set X-Frame-Options SAMEORIGIN"
    replace_directive(apache_conf, x_frame_options, "[9.1] ")

    # 9.2 –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ X-Content-Type-Options
    print("[9.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ X-Content-Type-Options...")
    logging.info("[9.2] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ X-Content-Type-Options")
    x_content_type_options = "Header always set X-Content-Type-Options nosniff"
    replace_directive(apache_conf, x_content_type_options, "[9.2] ")

    # 9.3 –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ X-XSS-Protection
    print("[9.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ X-XSS-Protection...")
    logging.info("[9.3] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ X-XSS-Protection")
    x_xss_protection = 'Header always set X-XSS-Protection "1; mode=block"'
    replace_directive(apache_conf, x_xss_protection, "[9.3] ")

    # 9.4 –í–∫–ª—é—á–µ–Ω–∏–µ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Referrer-Policy
    print("[9.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Referrer-Policy...")
    logging.info("[9.4] –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ Referrer-Policy")
    referrer_policy = 'Header always set Referrer-Policy "no-referrer"'
    replace_directive(apache_conf, referrer_policy, "[9.4] ")

    print("\n=== –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ ===\n")
    logging.info("=== –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –±—Ä–∞—É–∑–µ—Ä–∞ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ ===")



def restart_apache():
    output, code = run_command("sudo systemctl restart apache2")
    if code != 0:
        print("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ apache2!")
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–µ apache2: {output}")
        print("–í—ã–≤–æ–¥:", output)
        return False

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–æ—Å–ª–µ —Ä–µ—Å—Ç–∞—Ä—Ç–∞
    status_output, status_code = run_command("sudo systemctl is-active apache2")
    if status_code == 0 and status_output.strip() == "active":
        print("‚úÖ Apache —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        logging.info("Apache —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç.")
        return True
    else:
        print("‚ùå Apache –Ω–µ –∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞!")
        logging.error(f"Apache –Ω–µ –∑–∞–ø—É—â–µ–Ω –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞, —Å—Ç–∞—Ç—É—Å: {status_output.strip()}")
        print("–°—Ç–∞—Ç—É—Å:", status_output)
        # –ü–æ–¥—Å–º–æ—Ç—Ä–µ—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–µ –æ—à–∏–±–∫–∏ –≤ –ª–æ–≥–∞—Ö
        logs, _ = run_command("sudo tail -n 10 /var/log/apache2/error.log")
        print("–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞ –æ—à–∏–±–æ–∫ Apache:\n", logs)
        logging.error(f"–ü–æ—Å–ª–µ–¥–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –ª–æ–≥–∞ –æ—à–∏–±–æ–∫ Apache:\n{logs}")
        return False

def main():
    print("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª–µ–π Apache –¥–ª—è www-data ===")
    logging.info("=== –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –º–æ–¥—É–ª–µ–π Apache –¥–ª—è www-data ===")
    # 1.1 ‚Äî auth –∏ ldap
    loaded_modules = run_command("apachectl -M")[0].splitlines()
    print("[1.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (auth) –∏ ldap")
    logging.info("[1.1] –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–æ–¥—É–ª–µ–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ (auth) –∏ ldap")
    auth_mods = [line.strip() for line in loaded_modules if "auth" in line]
    ldap_mods = [line.strip() for line in loaded_modules if "ldap" in line]
    print("–ê–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ auth:")
    if auth_mods:
        for mod in auth_mods:
            print(" ", mod)
            logging.info(f"–ê–∫—Ç–∏–≤–Ω—ã–π –º–æ–¥—É–ª—å auth: {mod}")
    else:
        print(" (–Ω–µ—Ç)")
        logging.info("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π auth")
    if not ldap_mods:
        print("–ê–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π ldap –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        logging.info("–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π ldap")
    else:
        print("–ê–∫—Ç–∏–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ ldap:")
        for mod in ldap_mods:
            print(" ", mod)
            logging.info(f"–ê–∫—Ç–∏–≤–Ω—ã–π –º–æ–¥—É–ª—å ldap: {mod}")
    print("–ü—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –æ—Ç–∫–ª—é—á–∏—Ç—å –Ω–µ–∏—Å–ø–æ–ª—å–∑—É–µ–º—ã–µ –º–æ–¥—É–ª–∏ —á–µ—Ä–µ–∑ a2dismod\n")
    logging.info("–ó–∞–ø—É—Å–∫ check_module_item –¥–ª—è –º–æ–¥—É–ª–µ–π 1.2‚Äì1.11")
    check_module_item("1.2", "–ú–æ–¥—É–ª—å log_config –í–ö–õ–Æ–ß–ï–ù", module="log_config_module", should_be_enabled=True)
    check_module_item("1.3", "–ú–æ–¥—É–ª—å WebDAV –û–¢–ö–õ–Æ–ß–ï–ù", module="dav_module", should_be_enabled=False)
    check_module_item("1.4", "–ú–æ–¥—É–ª—å mod_status –û–¢–ö–õ–Æ–ß–ï–ù", module="status_module", should_be_enabled=False,
                      disable_func=lambda: run_command("sudo a2dismod status"))
    check_module_item("1.5", "–ú–æ–¥—É–ª—å autoindex_module –û–¢–ö–õ–Æ–ß–ï–ù", module="autoindex_module", should_be_enabled=False,
                      disable_func=lambda: run_command("sudo a2dismod autoindex -f"), force_disable=True)
    check_module_item("1.6", "–ú–æ–¥—É–ª–∏ proxy_* –û–¢–ö–õ–Æ–ß–ï–ù–´", prefix="proxy_", should_be_enabled=False)
    check_module_item("1.7", "–ú–æ–¥—É–ª—å userdir –û–¢–ö–õ–Æ–ß–ï–ù", prefix="userdir_", should_be_enabled=False)
    check_module_item("1.8", "–ú–æ–¥—É–ª—å mod_info –û–¢–ö–õ–Æ–ß–ï–ù", module="info_module", should_be_enabled=False)
    check_module_item("1.9", "–ú–æ–¥—É–ª–∏ mod_auth_digest –û–¢–ö–õ–Æ–ß–ï–ù–´", module="auth_digest_module", should_be_enabled=False)
    check_module_item("1.10", "–ú–æ–¥—É–ª–∏ mod_auth_basic –û–¢–ö–õ–Æ–ß–ï–ù–´", module="auth_basic_module", should_be_enabled=False,
                      disable_func=lambda: run_command("sudo a2dismod auth_basic -f"), force_disable=True)
    check_module_item("1.11", "–ú–æ–¥—É–ª—å mod_ssl –í–ö–õ–Æ–ß–ï–ù", module="ssl_module", should_be_enabled=True,
                      enable_func=lambda: (run_command("sudo a2enmod ssl"),
                                          run_command("sudo a2ensite default-ssl.conf")))

    logging.info("–í–∫–ª—é—á–∞–µ–º –º–æ–¥—É–ª—å headers")
    subprocess.run(["sudo", "a2enmod", "headers"], check=True)
    logging.info("–ó–∞–ø—É—Å–∫ check_permissions")
    check_permissions()
    logging.info("–ó–∞–ø—É—Å–∫ check_access_controls")
    check_access_controls()
    logging.info("–ó–∞–ø—É—Å–∫ check_and_apply_minimization")
    check_and_apply_minimization()
    logging.info("–ó–∞–ø—É—Å–∫ check_logging_settings")
    check_logging_settings()
    logging.info("–ó–∞–ø—É—Å–∫ check_ssl_tls_settings")
    check_ssl_tls_settings()
    logging.info("–ó–∞–ø—É—Å–∫ set_dos_prevention")
    set_dos_prevention()
    logging.info("–ó–∞–ø—É—Å–∫ set_request_limits")
    set_request_limits()
    logging.info("–ó–∞–ø—É—Å–∫ set_browser_security")
    set_browser_security()
    logging.info("–ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞ Apache")
    restart_apache()
if __name__ == "__main__":
    main()
